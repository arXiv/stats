################ base ################
FROM python:3.10 AS base

################ builder ################
FROM base AS builder

# install poetry in its own environment
ENV POETRY_VERSION=2.1.3 \
    POETRY_HOME=/opt/poetry
RUN python -m venv $POETRY_HOME && \
    $POETRY_HOME/bin/pip install -U pip poetry==$POETRY_VERSION

ENV PATH="/opt/poetry/bin:$PATH"

# install dependencies in their own environment
WORKDIR /home
COPY poetry.lock pyproject.toml ./
RUN poetry config virtualenvs.in-project true && \
    poetry install --no-interaction --no-ansi \
    --without test --no-root
RUN poetry show -a
RUN ls -a

WORKDIR /
RUN ls -a

# copy source
ADD stats /stats

################ test build ################
FROM builder AS with-test

ENV PATH="/opt/poetry/bin:/stats/:$PATH"

# install test dependencies
WORKDIR /home
RUN poetry install --no-interaction --no-ansi \
    --no-root
RUN echo $PATH

# RUN poetry run pytest

# copy tests
COPY tests /tests

WORKDIR /home
RUN ls -a

################ test ################
FROM with-test AS test

ENV PATH="/opt/poetry/bin:/stats/:$PATH"

# run tests
RUN poetry run pytest

################ production ################
FROM base AS production
COPY --from=builder /home /home

ENV PATH="/stats:$PATH"

ENV FLASK_APP=factory.py
ENV FLASK_ENV=development
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=8080
EXPOSE 8080

ENTRYPOINT ["flask", "run", "--host=0.0.0.0", "--port=8080"]
