name: Build and push stats-api

run-name: "Build stats-api ${{ github.ref_name }} ${{ inputs.custom_sha || github.sha }}"

on:
  push:
    paths:
      - "stats-api/**"
  pull_request:
    paths:
      - "stats-api/**"
  workflow_dispatch:
    inputs:
      custom_sha:
        description: 'Custom SHA (image rebuilds only)'
        required: false
        type: string

permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: write

env:
  DOCKERFILE: "Dockerfile.api"
  IMAGE_NAME: "stats-api"
  PORT: "8080"
  TARGET: "runtime"
  DEPLOY_WORKFLOW: "deploy-stats-api.yml"

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Format check
        run: terraform fmt -check

  build-push:
    needs: format-check
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.custom_sha || github.sha }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.PROVIDER_NAME }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build image, caching from latest
        run: |
          docker pull gcr.io/${{ vars.GCP_PROJECT_ID }}/${IMAGE_NAME}:latest

          docker build --target ${TARGET} --build-arg PORT=${PORT} -f ${DOCKERFILE} \
          --cache-from gcr.io/${{ vars.GCP_PROJECT_ID }}/${IMAGE_NAME}:latest \
          -t gcr.io/${{ vars.GCP_PROJECT_ID }}/${IMAGE_NAME}:${{ inputs.custom_sha || github.sha }} \
          ${{ github.ref_name == 'main' && format('-t gcr.io/{0}/{1}:latest', vars.GCP_PROJECT_ID, env.IMAGE_NAME) || '' }} .

      - name: Push image
        run: docker push --all-tags gcr.io/${{ vars.GCP_PROJECT_ID }}/${IMAGE_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    if: ${{ !inputs.custom_sha }}
    steps:
      - name: Trigger Service Deployment Routing
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api repos/arXiv/arxiv-iac/dispatches \
            --method POST \
            -f event_type=deploy-service \
            -f ref=workflow4 \
            -f client_payload='{
              "image_tag":"${{ inputs.custom_sha || github.sha }}",
              "deploy_workflow":"${{ env.DEPLOY_WORKFLOW }}",
              "repository":"${{ github.repository }}",
              "ref_name":"${{ github.ref_name }}",
              "event_name":"${{ github.event_name }}",
              "base_ref":"${{ github.base_ref }}",
              "head_ref":"${{ github.head_ref }}"
            }'