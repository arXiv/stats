name: Build and push stats-api

run-name: "Build stats-api ${{ github.ref_name }} ${{ inputs.custom_sha || github.sha }}"

on:
  push:
    branches:
      - main
    paths:
      - "stats-api/**"
  pull_request:
    branches:
      - main
    paths:
      - "stats-api/**"
  workflow_dispatch:
    inputs:
      custom_sha:
        description: 'Custom SHA (image rebuilds only)'
        required: false
        type: string

permissions:
  id-token: write
  actions: write

env:
  DEPLOY_WORKFLOW: "deploy-stats-api.yml"
  DOCKERFILE: "Dockerfile.api"
  GCP_PROJECT_ID: "arxiv-development"
  IMAGE_NAME: "stats-api"
  PORT: "8080"
  TARGET: "runtime"

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Format check
        run: terraform fmt -check

  build-push:
    needs: format-check
    runs-on: ubuntu-latest

    concurrency:
      group: build-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.custom_sha || github.sha }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.ARXIV_DEVELOPMENT_PROVIDER_NAME }}
          service_account: ${{ vars.ARXIV_DEVELOPMENT_SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build image, caching from latest
        run: |
          docker pull gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest

          BRANCH_TAG="$(printf "%.128s" "${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}" | sed 's/^[.-]*//')"

          docker build --target ${TARGET} --build-arg PORT=${PORT} -f ${DOCKERFILE} \
          --cache-from gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest \
          -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ inputs.custom_sha || github.sha }} \
          -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${BRANCH_TAG} \
          ${{ github.ref_name == 'main' && format('-t gcr.io/{0}/{1}:latest', env.GCP_PROJECT_ID, env.IMAGE_NAME) || '' }} .

      - name: Push image
        run: docker push --all-tags gcr.io/${GCP_PROJECT_ID}/${IMAGE_NAME}

      # CI Deployment Routing ... manual builds of a commit are not CD candidates
      - name: Deployment Routing
        if: ${{ !inputs.custom_sha }}
        uses: arXiv/iac-public/.github/actions/service-deployment-routing@main  
        with:
          image_tag: ${{ github.sha }}
          deploy_workflow: ${{ env.DEPLOY_WORKFLOW }}
          workload_identity_provider: ${{ vars.ARXIV_DEVELOPMENT_PROVIDER_NAME }}
          service_account: ${{ vars.ARXIV_DEVELOPMENT_SERVICE_ACCOUNT }}