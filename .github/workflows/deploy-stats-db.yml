name: Deploy or update stats-db

on:
  push:
    branches:
      - main
    paths:
      - "terraform/stats_db/**"
  pull_request:
    branches:
      - main
    paths:
      - "terraform/stats_db/**"
  workflow_dispatch:
    inputs:
      env:
        description: "Environment"
        required: true
        type: choice
        options:
          - "development"
          - "production"

jobs:
  format-check:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Format check
        run: terraform fmt -check

  plan:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development' }}
    needs: format-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.PROVIDER_NAME }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Initialize remote backend
        run: terraform init -backend-config="bucket=${{ vars.ENV_VAR }}-arxiv-terraform-state"
        working-directory: terraform/stats_db

      - name: Plan
        run: terraform plan -var-file=envs/${{ vars.ENV_VAR }}.tfvars -out=plan.tfout
        working-directory: terraform/stats_db

      - name: Save plan to workspace
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/stats_db/plan.tfout
          if-no-files-found: error

  manual-approval:
    permissions:
      contents: read
      issues: write
      id-token: write
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Await for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: carly-jones
          minimum-approvals: 1
          issue-title: "Manual Approval Required to Deploy or Update Database"
          issue-body: "Please review the plan and approve or deny the deployment."
          exclude-workflow-initiator-as-approver: false

  deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development' }}
    if: github.ref == 'refs/heads/main'
    needs: manual-approval

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.PROVIDER_NAME }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Initialize remote backend
        run: terraform init -backend-config="bucket=${{ vars.ENV_VAR }}-arxiv-terraform-state"
        working-directory: terraform/stats_db

      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: terraform/stats_db

      - name: Apply
        run: terraform apply -var-file=envs/${{ vars.ENV_VAR }}.tfvars -auto-approve plan.tfout
        working-directory: terraform/stats_db
