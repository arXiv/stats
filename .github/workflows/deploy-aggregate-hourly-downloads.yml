name: Format check and deploy aggregate-hourly-downloads

on:
  push:
    branches:
      - main
    paths:
      - "stats-functions/aggregate_hourly_downloads/**"
      - "terraform/aggregate_hourly_downloads/**"
  pull_request:
    branches:
      - main
    paths:
      - "stats-functions/aggregate_hourly_downloads/**"
      - "terraform/aggregate_hourly_downloads/**"
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Format check
        run: terraform fmt -check

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development' }}
    if: github.ref == 'refs/heads/main'
    needs: format-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip function source
        run: |
          cd stats-functions/aggregate_hourly_downloads/src
          zip src.zip main.py entities.py models.py requirements.txt
          cp src.zip ../../../terraform/aggregate_hourly_downloads/

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.PROVIDER_NAME }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check version
        run: terraform --version

      - name: Initialize remote backend
        run: terraform init -backend-config="bucket=${{ vars.ENV_VAR }}-arxiv-terraform-state"
        working-directory: terraform/aggregate_hourly_downloads

      - name: Apply
        run: terraform apply -var-file=envs/${{ vars.ENV_VAR }}.tfvars -var="commit_sha=${{ github.sha }}" -auto-approve
        working-directory: terraform/aggregate_hourly_downloads
